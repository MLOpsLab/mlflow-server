name: Deploy MLflow Server to EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: 15m  # Limit total deployment time
          script: |
            # Limit system resources for deployment
            export DEPLOYMENT_CPUS=$(nproc --ignore=1)  # Use all but one CPU
            export DEPLOYMENT_MEMORY=$(($(free -g | awk '/^Mem:/{print $2}') / 2))G

            # Create project directory with minimal overhead
            mkdir -p ~/mlflow-server
            cd ~/mlflow-server

            # Shallow clone to reduce network and disk usage
            git clone --depth 1 https://github.com/MLOpsLab/mlflow-server.git .
            
            # Ensure Docker is running with limited resources
            sudo systemctl start docker

            # Cleanup with minimal overhead
            docker system prune -af --filter "until=24h"

            # Build Docker image with resource limits
            DOCKER_BUILDKIT=1 docker build \
              --compress \
              --no-cache \
              -t mlflow-server \
              .

            # Stop and remove existing container
            docker stop mlflow || true
            docker rm mlflow || true

            # Run Docker container with strict resource constraints
            docker run -d \
              --restart=unless-stopped \
              --memory=400m \
              --cpus=0.5 \
              -p 5000:5000 \
              --name mlflow \
              -e GUNICORN_WORKERS=2 \
              -e GUNICORN_THREADS=1 \
              -e MLFLOW_ARTIFACTS_BUCKET=${{ secrets.MLFLOW_ARTIFACTS_BUCKET }} \
              mlflow-server